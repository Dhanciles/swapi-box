{"version":3,"sources":["images/images.js","images/beru-lars.jpg","images/luke.jpg","images/c3po.jpeg","images/r2d2.jpg","images/darth-vader.jpg","images/leia-organa.jpeg","images/owen-lars.jpg","images/r5-d4.jpg","images/biggs-darklighter.jpg","images/obi-wan-kenobi.jpg","images/a-wing.jpg","images/alderaan.jpg","images/at-at.jpg","images/at-st.jpg","images/b-wing.jpg","images/bespin.jpg","images/coruscant.jpg","images/dagobah.jpg","images/endor.jpg","images/geonosis.jpeg","images/hoth.jpg","images/kamino.jpg","images/naboo.jpg","images/sail-barge.jpeg","images/sand-crawler.jpeg","images/snowspeeder.png","images/storm-iv.jpg","images/t-16-skyhopper.jpg","images/tatooine.jpg","images/tie-bomber.jpg","images/tie-fighter.jpeg","images/x-34-landspeeder.jpg","images/x-wing.jpg","images/yavin-4.jpg","helpers/Cleaner.js","helpers/fetchData.js","helpers/apiCalls.js","Components/Loading/Loading.js","Components/ScrollingText/ScrollingText.js","Components/Menu/Menu.js","Components/Card/Card.js","Components/CardContainer/CardContainer.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["beru","require","luke","c3po","r2d2","darth","leia","owen","r5d4","biggs","obi","awing","alderaan","atat","atst","bwing","bespin","coruscant","dagobah","endor","geonosis","hoth","kamino","naboo","sailbarge","sandcrawler","snowspeeder","stormiv","t16","tattooine","tiebomber","tiefighter","x34","xwing","yavin4","module","exports","Luke Skywalker","C-3PO","R2-D2","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","A wing","Alderaan","AT-AT","AT-ST","B-Wing","Bespin","Coruscant","Dagobah","Endor","Geonosis","Hoth","Kamino","Naboo","Sail barge","Sand Crawler","Snowspeeder","Storm IV Twin-Pod cloud car","T-16 skyhopper","Tattooine","TIE bomber","TIE/LN starfighter","X-34 landspeeder","X-Wing","Yavin IV","__webpack_require__","p","filmCleaner","films","randomIndex","Math","floor","random","crawl","results","opening_crawl","title","episode","episode_id","date","release_date","cardCleaner","dataArray","selection","cleanPeople","cleanVehicles","cleanPlanets","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","peopleArray","cleanPeopleArray","allPeople","wrap","_context2","prev","next","map","_ref2","_callee","person","homeworld","species","displayedSpecies","properPopulation","imagePath","_context","API","sent","population","parseInt","toLocaleString","Image","path","name","abrupt","image","homeworldPop","active","type","stop","this","_x2","apply","arguments","Promise","all","_x","vehiclesArray","vehicle","model","class","vehicle_class","numberOfPassengers","passengers","_ref3","_callee4","planetsArray","cleanPlanetsArray","allPlanets","_context4","_ref4","_callee3","planet","residents","allResidents","_context3","terrain","climate","_x4","_x3","fetchData","url","response","fetch","status","json","getRandomFilmCrawl","filmUrl","randomCrawl","fetchByMenu","data","concat","fetchProperty","returnedValue","address","property","Loading","react_default","createElement","className","ScrollingText","loadingStatus","numeral","Components_Loading_Loading","Menu","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleOpen","state","addClass","setState","handleMenuClick","e","target","classList","contains","props","menuSelect","innerText","_this2","localStorageObj","JSON","parse","localStorage","getItem","onMouseEnter","onMouseLeave","onClick","NavLink","to","length","id","Component","proptypes","PropTypes","func","isRequired","favorites","array","Card","displayedCard","card","saveToFavorites","removeFromFavorites","keys","includes","peopleCard","vehicleCard","planetCard","toggle","handleLocalStorage","src","alt","isNaN","resident","key","value","object","string","CardContainer","selectedCards","errorMessage","displayedCards","Components_Card_Card","App","favorited","menuSelection","toConsumableArray","setItem","stringify","defineProperty","updateFavoriteStorage","push","localStorageArray","forEach","item","updateFavorites","filter","favorite","people","vehicles","planets","error","message","_this3","_this$state$randomCra","cardContainer","Components_CardContainer_CardContainer","Components_Menu_Menu","Switch","Route","exact","render","Components_ScrollingText_ScrollingText","Boolean","window","location","hostname","match","router","BrowserRouter","Components_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fad2e381.chunk.js","sourcesContent":["const beru = require('./beru-lars.jpg');\nconst luke = require('./luke.jpg');\nconst c3po = require('./c3po.jpeg');\nconst r2d2 = require('./r2d2.jpg');\nconst darth = require('./darth-vader.jpg');\nconst leia = require('./leia-organa.jpeg');\nconst owen = require('./owen-lars.jpg');\nconst r5d4 = require('./r5-d4.jpg');\nconst biggs = require('./biggs-darklighter.jpg');\nconst obi = require('./obi-wan-kenobi.jpg');\nconst awing = require('./a-wing.jpg');\nconst alderaan = require('./alderaan.jpg');\nconst atat = require('./at-at.jpg');\nconst atst = require('./at-st.jpg');\nconst bwing = require('./b-wing.jpg');\nconst bespin = require('./bespin.jpg');\nconst coruscant = require('./coruscant.jpg');\nconst dagobah = require('./dagobah.jpg');\nconst endor = require('./endor.jpg');\nconst geonosis = require('./geonosis.jpeg');\nconst hoth = require('./hoth.jpg');\nconst kamino = require('./kamino.jpg');\nconst naboo = require('./naboo.jpg');\nconst sailbarge = require('./sail-barge.jpeg');\nconst sandcrawler = require('./sand-crawler.jpeg');\nconst snowspeeder = require('./snowspeeder.png');\nconst stormiv = require('./storm-iv.jpg');\nconst t16 = require('./t-16-skyhopper.jpg');\nconst tattooine = require('./tatooine.jpg');\nconst tiebomber = require('./tie-bomber.jpg');\nconst tiefighter = require('./tie-fighter.jpeg');\nconst x34 = require('./x-34-landspeeder.jpg');\nconst xwing = require('./x-wing.jpg');\nconst yavin4 = require('./yavin-4.jpg');\n\n\nmodule.exports = [\n{ 'Luke Skywalker': luke },\n{ 'C-3PO': c3po },\n{ 'R2-D2': r2d2 },\n{ 'Darth Vader': darth },\n{ 'Leia Organa': leia },\n{ 'Owen Lars': owen },\n{ 'Beru Whitesun lars': beru },\n{ 'R5-D4': r5d4 },\n{ 'Biggs Darklighter': biggs },\n{ 'Obi-Wan Kenobi': obi },\n{ 'A wing': awing },\n{ 'Alderaan': alderaan },\n{ 'AT-AT': atat },\n{ 'AT-ST': atst },\n{ 'B-Wing': bwing },\n{ 'Bespin': bespin },\n{ 'Coruscant': coruscant },\n{ 'Dagobah': dagobah },\n{ 'Endor': endor },\n{ 'Geonosis': geonosis },\n{ 'Hoth': hoth },\n{ 'Kamino': kamino },\n{ 'Naboo': naboo },\n{ 'Sail barge': sailbarge },\n{ 'Sand Crawler': sandcrawler },\n{ 'Snowspeeder': snowspeeder },\n{ 'Storm IV Twin-Pod cloud car': stormiv },\n{ 'T-16 skyhopper': t16 },\n{ 'Tattooine': tattooine },\n{ 'TIE bomber': tiebomber },\n{ 'TIE/LN starfighter': tiefighter },\n{ 'X-34 landspeeder': x34 },\n{ 'X-Wing': xwing },\n{ 'Yavin IV': yavin4 }\n];","module.exports = __webpack_public_path__ + \"static/media/beru-lars.7084cf76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/luke.540f5850.jpg\";","module.exports = __webpack_public_path__ + \"static/media/c3po.c393bf90.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/r2d2.0cdd3662.jpg\";","module.exports = __webpack_public_path__ + \"static/media/darth-vader.f69803cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leia-organa.6b8c1f7d.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/owen-lars.0590958c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/r5-d4.63133e71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/biggs-darklighter.6ed06b55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obi-wan-kenobi.75a9b966.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a-wing.dd24fa0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alderaan.0f6598fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/at-at.3c8be0f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/at-st.5b9635a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/b-wing.a733bd9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bespin.db4c9824.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coruscant.26e57286.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dagobah.2e722a43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/endor.82348d48.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geonosis.f996aac4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hoth.57a9e133.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kamino.d5aa43b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/naboo.80ba447b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sail-barge.7da9c594.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sand-crawler.d3c6d88e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/snowspeeder.04aeaf59.png\";","module.exports = __webpack_public_path__ + \"static/media/storm-iv.72bf95bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/t-16-skyhopper.7d3c2daf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tatooine.b2cb84e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tie-bomber.0741d299.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tie-fighter.8808cdff.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/x-34-landspeeder.e36e4921.jpg\";","module.exports = __webpack_public_path__ + \"static/media/x-wing.59cc2f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yavin-4.21a7a700.jpg\";","import * as API from './apiCalls'\nimport * as Image from '../images/images'\n\nexport const filmCleaner = (films) => {\n  const randomIndex = Math.floor(Math.random() * 8)\n  if (films) {\n    const result = {\n      crawl: films.results[randomIndex].opening_crawl,\n      title: films.results[randomIndex].title,\n      episode: films.results[randomIndex].episode_id,\n      date: films.results[randomIndex].release_date\n    }\n   return result\n  } else {\n    return undefined\n  }\n }\n\nexport const cardCleaner = (dataArray, selection) => {\n  if(selection === 'people') {\n    return cleanPeople(dataArray)\n  }\n  else if(selection === 'vehicles') {\n    return cleanVehicles(dataArray)\n  }\n  else if(selection === 'planets') {\n    return cleanPlanets(dataArray)\n  } else {\n    return 'error in data cleaner'\n  }\n}\n\nconst cleanPeople = async (peopleArray) => {\n  const cleanPeopleArray = peopleArray.map(async person => {\n    const homeworld = await API.fetchProperty(person.homeworld)\n    const species = await API.fetchProperty(person.species)\n    const displayedSpecies = await species[0]\n    let properPopulation\n    if (homeworld.population === 'unknown') {\n      properPopulation = homeworld.population\n    } else {\n      properPopulation = parseInt(homeworld.population).toLocaleString('en-US')\n    }\n    const imagePath = Image.find(path => {\n      return path[person.name]\n    })\n    return {\n      image: imagePath[person.name],\n      name: person.name,\n      homeworld: homeworld.name,\n      species: displayedSpecies,\n      homeworldPop: properPopulation,\n      active: false,\n      type: 'people'\n    }\n  })\n  const allPeople = await Promise.all(cleanPeopleArray)\n  return allPeople\n}\n\nconst cleanVehicles = (vehiclesArray) => {\n  const cleanVehiclesArray = vehiclesArray.map(vehicle => {\n    const imagePath = Image.find(path => {\n      return path[vehicle.name]\n    })\n    return {\n      name: vehicle.name,\n      model: vehicle.model,\n      class: vehicle.vehicle_class,\n      numberOfPassengers: vehicle.passengers,\n      image: imagePath[vehicle.name],\n      active: false,\n      type: 'vehicles'\n    }\n  })\n  return cleanVehiclesArray\n}\n\nconst cleanPlanets = async (planetsArray) => {\n  const cleanPlanetsArray = planetsArray.map(async planet => {\n    const residents = await API.fetchProperty(planet.residents)\n    const allResidents = await Promise.all(residents)\n    const properPopulation = parseInt(planet.population).toLocaleString('en-US')\n    const imagePath = Image.find(path => {\n      return path[planet.name]\n    })\n    return {\n      name: planet.name,\n      terrain: planet.terrain,\n      population: properPopulation,\n      climate: planet.climate,\n      residents: allResidents,\n      image: imagePath[planet.name],\n      active: false,\n      type: 'planets'\n    }\n  })\n\n  const allPlanets = await Promise.all(cleanPlanetsArray)\n  return allPlanets\n}","export const fetchData = async (url) => {\n  const response = await fetch(url);\n  \n  if (response.status >= 300) {\n    return 'Error: Cannot fetch your data';\n  } else {\n    return await response.json();\n  \n  }\n}","import {\n  filmCleaner,\n  cardCleaner\n} from './Cleaner.js';\nimport { fetchData } from './fetchData';\n\nexport const getRandomFilmCrawl = async (filmUrl) => {\n  const films = await fetchData(filmUrl)\n  const randomCrawl = filmCleaner(films)\n  return randomCrawl\n}\n\nexport const fetchByMenu = async (selection) => {\n  const url = `https://swapi.co/api/${selection}`\n  const data = await fetchData(url);\n  const results = cardCleaner(data.results, selection)\n  return results;\n}\n\nexport const fetchProperty = async (url) => {\n  let returnedValue;\n  if (typeof url === 'string') {\n    returnedValue = await fetchData(url);\n  } else {\n    returnedValue = url.map(async address => {\n      const property = await fetchData(address)\n      return property.name\n    })\n  }\n  return returnedValue;\n}","import React from 'react'\nimport './Loading.scss'\n\nconst Loading = () => {\n  return (\n    <h1 className=\"loading-txt\">Fetching data from a galaxy far, far away...</h1>\n  )\n}\n\nexport default Loading","import React from 'react'\nimport Loading from '../Loading/Loading'\nimport './ScrollingText.scss'\n\nconst ScrollingText = ({ crawl, title, episode, date, loadingStatus }) => {\n\n    const numeralArray = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII']\n    const numeral = numeralArray[episode - 1]\n\n  if (loadingStatus) {\n    return <Loading />\n  } else {\n    return (\n      <section className=\"scrolling-text\">\n        <div className=\"fade\"></div>\n        <article className=\"star-wars\">\n          <div className=\"crawl\">\n            <div className=\"title\">\n              <p>{`Episode ${numeral}`}</p>\n              <h1>{title}</h1>\n              <p className=\"date\">(Release date: {date})</p>\n            </div>\n            <p className=\"crawl-text\">{crawl}</p>\n          </div>\n        </article>\n      </section>\n    )\n  }\n}\n\nexport default ScrollingText","import React, {Component} from 'react'\nimport './Menu.scss'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\n\nclass Menu extends Component {\n  constructor() {\n    super()\n    this.state = {\n      addClass: 'circle-menu'\n    }\n  }\n\n\n  toggleOpen = () => {\n    if (this.state.addClass === 'circle-menu') {\n      this.setState({\n        addClass: 'open circle-menu'\n      })\n    } else {\n      this.setState({\n        addClass: 'circle-menu'\n      })\n    }\n  }\n\n  handleMenuClick = (e) => {\n    if (!e.target.classList.contains('ul')) {\n      this.props.menuSelect(e.target.innerText)\n    }\n  }\n\n  render() {\n    let localStorageObj = JSON.parse(localStorage.getItem('favorites'))\n    return (\n      <div className=\"menu-container\">\n        <div className={this.state.addClass} onMouseEnter={() => this.toggleOpen()} onMouseLeave={() => this.toggleOpen()}>\n          <div className=\"wing bar bar1\"></div>\n          <div className=\"wing bar bar2\"></div>\n          <div className=\"wing wing1\"></div>\n          <div className=\"wing wing2\"></div>\n          <div className=\"wing-tip wing-tip1\"></div>\n          <div className=\"wing-tip wing-tip2\"></div>\n          <div className=\"wing-tip wing-tip3\"></div>\n          <div className=\"wing-tip wing-tip4\"></div>\n            <ul className=\"ul\" onClick={(e) => this.handleMenuClick(e)}>\n              <NavLink to=\"/people\" className=\"link\">people</NavLink>\n              <NavLink to=\"/vehicles\" className=\"link\">vehicles</NavLink>\n              <NavLink to=\"/planets\" className=\"link\">planets</NavLink>\n              <NavLink to=\"/favorites\" className=\"link\">favorites</NavLink><span className=\"favorites-ctr\">{localStorageObj ? localStorageObj.length : 0}</span>\n            </ul>\n        </div>\n        <NavLink id=\"logo-container\" to=\"/\">\n          <h1 className=\"logo\">swapi-box</h1>\n        </NavLink>\n      </div>\n    )\n  }\n}\n\nMenu.proptypes = {\n  menuSelect: PropTypes.func.isRequired, \n  favorites: PropTypes.array\n}\n\nexport default Menu","import React from 'react'\nimport './Card.scss'\nimport PropTypes from 'prop-types'\n\nconst handleLocalStorage = (e, card, saveToFavorites, removeFromFavorites) => {\n  e.target.classList.toggle('active')\n  card.active = !card.active\n  if (e.target.classList.contains('active')) {\n    saveToFavorites(card)\n  } else {\n    removeFromFavorites(card)\n  }\n}\n\nconst Card = ({card, saveToFavorites, removeFromFavorites}) => {\n  let displayedCard\n  if (Object.keys(card).includes('species')) {\n    displayedCard = peopleCard(card)\n  } else if (Object.keys(card).includes('model')) {\n    displayedCard = vehicleCard(card)\n  } else if (Object.keys(card).includes('terrain')) {\n    displayedCard = planetCard(card)\n  }\n\n  return (\n    <div className='card'>\n      <h2>{card.name}</h2>\n      <div className='fav-btn-div'>\n        <button className={`fav-btn ${card.active ? 'active' : ''}`} onClick={\n          (e) => handleLocalStorage(e, card, saveToFavorites, removeFromFavorites)\n          }>\n            {card.active ? 'Favorited' : 'Favorite'}\n          </button>\n      </div>\n      {displayedCard}\n\n    </div>\n  )\n}\n\nconst peopleCard = (card) => {\n  return (\n  <div>\n    <div className='image-div'>\n      <img src={card.image} className='image' alt={card.name}/>\n    </div>\n    <p>Species: {card.species}</p>\n    <p>Homeworld: {card.homeworld}</p>\n    <p>Homeworld population: {card.homeworldPop}</p>\n  </div>\n  )\n}\n\nconst vehicleCard = (card) => {\n  return (\n    <div>\n       <div className='image-div'>\n         <img src={card.image} className='image' alt={card.name}/>\n       </div>\n       <p>Model: {card.model}</p>\n       <p>Class: {card.class}</p>\n       <p>Available passengers: {card.numberOfPassengers}</p>\n     </div>\n  )\n}\n\nconst planetCard = (card) => {\n  return (\n    <div>\n       <div className='image-div'>\n         <img src={card.image} className='image' alt={card.name}/>\n       </div>\n       <p className=\"short-space\">Population: {isNaN(parseInt(card.population)) ? 'Uninhabited' : card.population}</p>\n       <p className=\"short-space\">Climate: {card.climate}</p>\n       <p className=\"short-space\">Terrain: {card.terrain}</p>\n       <p className=\"residents-p\">Residents:  </p>\n       <select className='residents-list'>\n         {card.residents.length ?\n           card.residents.map(resident => {\n             return <option key={resident} value={resident}>{resident}</option>\n           }) : <option>No residents listed</option>\n         }\n       </select>\n     </div>\n  )\n}\nCard.proptypes = {\n  saveToFavorites: PropTypes.func.isRequired, \n  removeFromFavorites: PropTypes.func.isRequired, \n  card: PropTypes.object, \n  key: PropTypes.string\n}\nexport default Card","import React from 'react'\nimport Card from '../Card/Card'\nimport './CardContainer.scss'\nimport Loading from '../Loading/Loading'\nimport PropTypes from 'prop-types'\n\nconst CardContainer = ({\n  selectedCards, \n  saveToFavorites, \n  removeFromFavorites, \n  errorMessage, \n  loadingStatus}) => {\n\n  if (selectedCards) {\n    var displayedCards = selectedCards.map(card => {\n      return <Card card={card}  key={card.name} \n                                saveToFavorites={saveToFavorites}\n                                removeFromFavorites={removeFromFavorites} />\n    })\n  }\n\n  if (loadingStatus) {\n    return <Loading />\n  } else if (errorMessage !== '') {\n    return (\n      <main>\n        <h1 className=\"error-msg\">{errorMessage}</h1>\n      </main>\n    )\n  } else {\n    return (\n      <main>\n        {displayedCards}\n      </main>\n    )\n  }\n}\n\n  CardContainer.proptypes = {\n    selectedCards: PropTypes.array, \n    errorMessage: PropTypes.string, \n    saveToFavorites: PropTypes.func.isRequired, \n    removeFromFavorites: PropTypes.func.isRequired\n  }\n\nexport default CardContainer\n","import React, { Component } from 'react'\nimport './App.scss'\nimport '../../index.css'\nimport * as API from '../../helpers/apiCalls'\nimport ScrollingText from '../ScrollingText/ScrollingText.js'\nimport Menu from '../Menu/Menu.js'\nimport CardContainer from '../CardContainer/CardContainer.js'\nimport {Route, Switch} from 'react-router-dom'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      randomCrawl: '', \n      errorMessage: '',\n      menuSelection: '',\n      favorites: [],\n      selectedCards: [],\n      people: [],\n      vehicles: [],\n      planets: [],\n      loadingStatus: false\n    }\n  }\n\n  componentDidMount() {\n    try {\n    const url = 'https://swapi.co/api/films'\n    return this.setState({loadingStatus: true}, \n      async () => {\n        const randomCrawl = await API.getRandomFilmCrawl(url)\n        this.setState({\n          randomCrawl, \n          loadingStatus: false\n        })\n      })\n    } catch(error) {\n      this.setState({\n        errorMessage: error.message,\n        loadingStatus: false\n      })\n    }\n  }\n  \n  menuSelect = async (selection) => {\n    if (selection === 'favorites' && (!localStorage.getItem('favorites') || JSON.parse(localStorage.getItem('favorites')).length === 0)) {\n      this.setState({\n        errorMessage: 'No favorites available to display... please select another menu option above',\n        selectedCards: []\n      })\n    } else if (selection === 'favorites' && localStorage.getItem('favorites')) {\n      let favorited = JSON.parse(localStorage.getItem('favorites'))\n      this.setState({\n        errorMessage: '',\n        menuSelection: selection,\n        selectedCards: favorited\n      })\n    } else if (selection !== 'favorites' && JSON.parse(localStorage.getItem(selection))) {\n      this.setState({\n        errorMessage: '',\n        menuSelection: selection,\n        selectedCards: [...JSON.parse(localStorage.getItem(selection))]\n      })\n    } else {\n      this.setState({\n        loadingStatus: true\n      }, async () => {\n        const response = await API.fetchByMenu(selection)\n        localStorage.setItem(selection, JSON.stringify(response))\n        this.setState({\n          loadingStatus: false,\n          errorMessage: '',\n          menuSelection: selection,\n          selectedCards: response,\n          [selection]: response\n        })\n      })  \n    }\n  }\n\n  saveToFavorites = (card) => {\n    let favorited = JSON.parse(localStorage.getItem('favorites'))\n    if (!favorited) {\n      favorited = []\n    }\n    this.updateFavoriteStorage(card)\n    favorited.push(card)\n    localStorage.setItem('favorites', JSON.stringify(favorited))\n    this.setState({\n      favorites: [...this.state.favorites, ...favorited]\n    })\n  }\n\n  updateFavoriteStorage = (card) => {\n    let localStorageArray = JSON.parse(localStorage.getItem(card.type))\n    localStorageArray.forEach(item => {\n      if (item.name === card.name) {\n        item.active = !item.active\n      }\n    })\n    localStorage.setItem(card.type, JSON.stringify(localStorageArray))\n  }\n\n  removeFromFavorites = (card) => {\n    let favorited = JSON.parse(localStorage.getItem('favorites'))\n    let updateFavorites = favorited.filter(favorite => {\n      return card.name !== favorite.name\n    })\n    this.updateFavoriteStorage(card)\n    localStorage.setItem('favorites', JSON.stringify(updateFavorites))\n    if (this.state.menuSelection === 'favorites') {\n      this.setState({\n        favorites: [...updateFavorites],\n        selectedCards: [...updateFavorites]\n      })\n    } else {\n      this.setState({\n        favorites: [...updateFavorites]\n      })\n    }\n  }\n\n  render() {\n    const { crawl, title, episode, date } = this.state.randomCrawl\n    const cardContainer =  <CardContainer  \n                  selectedCards={this.state.selectedCards} \n                  saveToFavorites={this.saveToFavorites}\n                  removeFromFavorites={this.removeFromFavorites} \n                  errorMessage={this.state.errorMessage} \n                  loadingStatus={this.state.loadingStatus} />\n    return (\n      <div className=\"App\">\n      <div className=\"twinkle\" />\n        <Menu menuSelect={this.menuSelect} \n              favorites={this.state.favorites} />\n      <Switch>\n        <Route exact path=\"/\" render={() => \n        <ScrollingText title={title}\n                       crawl={crawl}\n                       episode={episode} \n                       date={date} \n                       loadingStatus={this.state.loadingStatus} />} />\n        <Route exact path=\"/people\" render={() => cardContainer} />\n        <Route exact path=\"/vehicles\" render={() => cardContainer} />\n        <Route exact path=\"/planets\" render={() => cardContainer} />\n        <Route exact path=\"/favorites\" render={() => {\n          return (\n            <CardContainer  \n                  selectedCards={JSON.parse(localStorage.getItem('favorites'))} \n                  saveToFavorites={this.saveToFavorites}\n                  removeFromFavorites={this.removeFromFavorites} \n                  errorMessage={this.state.errorMessage} \n                  loadingStatus={this.state.loadingStatus} />\n          )\n        }} />\n      </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n\n  \n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}